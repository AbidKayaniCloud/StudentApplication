//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StudentApplicationSystem.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;

    public partial class InterviewQuestionPaper
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public InterviewQuestionPaper()
        {
            this.Applications = new HashSet<Application>();
            this.Reviews = new HashSet<Review>();
        }

        [Key]
        [DisplayName("Interview Paper")]
        public int paperId { get; set; }
        public Nullable<int> applicationId { get; set; }
        public Nullable<int> userId { get; set; }
        public Nullable<int> jobId { get; set; }
        public string answers { get; set; }
        [DisplayName("Created by")]
        public Nullable<int> cd_creater { get; set; }
        [DisplayName("Created")]
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:dd/MM/yyyy hh:mm tt}", ApplyFormatInEditMode = true)]
        public Nullable<System.DateTime> dt_created { get; set; }
        [DisplayName("Modified by")]
        public Nullable<int> cd_modifier { get; set; }
        [DisplayName("Modified")]
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:dd/MM/yyyy hh:mm tt}", ApplyFormatInEditMode = true)]
        public Nullable<System.DateTime> dt_modified { get; set; }
        public string questionList { get; set; }


        public ICollection<Question> allQuestions
        {
            get
            {
                string[] ids = this.questionList.Split(',');
                List<Question> questions = new List<Question>();
                StudentApplicationSystemEntities db = new StudentApplicationSystemEntities();
                foreach (var strid in ids)
                {
                    int id = int.Parse(strid);
                    Question que = db.Questions.Find(id);
                    questions.Add(que);
                }
                return questions;
            }
        }
        public virtual Application Application { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Application> Applications { get; set; }
        public virtual User User { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Review> Reviews { get; set; }
    }
}