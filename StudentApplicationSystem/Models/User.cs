//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StudentApplicationSystem.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Web.Mvc;

    public partial class User
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public User()
        {
            this.Applications = new HashSet<Application>();
            this.InterviewQuestionPapers = new HashSet<InterviewQuestionPaper>();
            this.Reviews = new HashSet<Review>();
        }

        [Key]
        public int userId { get; set; }
        [DisplayName("Name")]
        public string name { get; set; }
        [DisplayName("Last Name")]
        public string surname { get; set; }

        public string printName
        {
            get
            {
                return name + " " + surname;
            }
        }

        [Required(ErrorMessage = "Email is required.")]
        [DisplayName("E-Mail")]
        [RegularExpression("\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*", ErrorMessage = "Email is invalid")]
        public string email { get; set; }
        [RegularExpression("^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,15}$", ErrorMessage = "Please use one uppercase character at least.")]
        public string password { get; set; }
        [DisplayName("Department")]
        [StringLength(150)]
        public string department { get; set; }
        [DisplayName("GPA")]
        [Range(1.0, 4.0)]
        public Nullable<double> gpa { get; set; }
        [DisplayName("Contact Number")]
        //[Mask("+1 (999) 000-0000", IncludeLiterals = MaskIncludeLiteralsMode.DecimalSymbol, PromptChar = '_', ErrorMessage = "Phone number is invalid")]
        public string phone_number { get; set; }
        [DisplayName("Modified By")]
        public Nullable<int> cd_modifier { get; set; }
        [DisplayName("Modified")]
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:dd/MM/yyyy hh:mm tt}", ApplyFormatInEditMode = true)]
        public Nullable<System.DateTime> dt_modified { get; set; }
        [DisplayName("Created")]
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:dd/MM/yyyy hh:mm tt}", ApplyFormatInEditMode = true)]
        public Nullable<System.DateTime> dt_created { get; set; }
        [DisplayName("Admin?")]
        public Nullable<int> isAdmin { get; set; }
        public bool BoolValue
        {
            // This function sets the int admin value by using checkbox in forms.
            get { return isAdmin == 1; }
            set { isAdmin = value ? 1 : 0; }
        }

        public string printAdmin
        {
            get { return isAdmin == 1 ? "Yes" : "No"; }
            set { }
        }
        public string applicationList { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Application> Applications { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<InterviewQuestionPaper> InterviewQuestionPapers { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<InterviewQuestionPaper> InterviewQuestionPapers1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Review> Reviews { get; set; }

        public static List<SelectListItem> DepartmentList
        {
            get { 
            List<SelectListItem> selectlist = new List<SelectListItem>();
            List<string> DList = new List<string>();
            DList.Add("Faculty of Computer and Information Sciences - Computer Engineering");
            DList.Add("Faculty of Computer and Information Sciences - Information Systems Engineering");
            DList.Add("Faculty of Computer and Information Sciences - Software Engineering");

            DList.Add("Faculty of Education - Computer Education and Instructional Technologies");
            DList.Add("Faculty of Education - Foreign Language Education");
            DList.Add("Faculty of Education - Special Education");
            DList.Add("Faculty of Education - Science Education Department");
            DList.Add("Faculty of Education - Mathematics Education Department");
            DList.Add("Faculty of Education - Social Sciences Education Department");
            DList.Add("Faculty of Education - Faculty of Education");

            DList.Add("Faculty of Dentistry - Dentistry");

            DList.Add("Faculty of Arts and Sciences - Turkish Language and Literature");
            DList.Add("Faculty of Arts and Sciences - History");
            DList.Add("Faculty of Arts and Sciences - Sociology");
            DList.Add("Faculty of Arts and Sciences - Social Work");
            DList.Add("Faculty of Arts and Sciences - History of Art");
            DList.Add("Faculty of Arts and Sciences - Mathematics");
            DList.Add("Faculty of Arts and Sciences - Chemistry");
            DList.Add("Faculty of Arts and Sciences - Physics");
            DList.Add("Faculty of Arts and Sciences - Philosophy");
            DList.Add("Faculty of Arts and Sciences - Geography");
            DList.Add("Faculty of Arts and Sciences - Translation Studies");
            DList.Add("Faculty of Arts and Sciences - Biology");
            DList.Add("Faculty of Arts and Sciences - German Language and Literature");

            DList.Add("Faculty of Law - Law");

            DList.Add("Faculty of Theology - Theology");

            DList.Add("Faculty of Communication - Public Relations and Advertising");
            DList.Add("Faculty of Communication - Communication Design and Media");
            DList.Add("Faculty of Communication - Journalism");
            DList.Add("Faculty of Communication - Radio Television and Cinema");

            DList.Add("Sakarya Business School - Human Resources Management");
            DList.Add("Sakarya Business School - Business");
            DList.Add("Sakarya Business School - Health Administration");
            DList.Add("Sakarya Business School - International Trade");
            DList.Add("Sakarya Business School - Management Information Systems");

            DList.Add("Faculty of Engineering - Environmental Engineering");
            DList.Add("Faculty of Engineering - Civil Engineering");
            DList.Add("Faculty of Engineering - Electrical and Electronics Engineering");
            DList.Add("Faculty of Engineering - Food Engineering");
            DList.Add("Faculty of Engineering - Industrial Engineering");
            DList.Add("Faculty of Engineering - Geophysical Engineering");
            DList.Add("Faculty of Engineering - Mechanical Engineering");
            DList.Add("Faculty of Engineering - Metallurgical and Materials Engineering");

            DList.Add("Faculty of Health Sciences - Midwifery");
            DList.Add("Faculty of Health Sciences - Nursing");

            DList.Add("Faculty of Art Design And Architecture - Visual Communication and Design");
            DList.Add("Faculty of Art Design And Architecture - Traditional Turkish Arts");
            DList.Add("Faculty of Art Design And Architecture - Painting");
            DList.Add("Faculty of Art Design And Architecture - Architecture");
            DList.Add("Faculty of Art Design And Architecture - Ceramic and Glass Design");


            DList.Add("Faculty of Political Sciences - Labour Economics and Industrial Relations");
            DList.Add("Faculty of Political Sciences - Econometrics");
            DList.Add("Faculty of Political Sciences - Economics");
            DList.Add("Faculty of Political Sciences - Political Science and Public Administration");
            DList.Add("Faculty of Political Sciences - Public Finance");
            DList.Add("Faculty of Political Sciences - International Relations");



            DList.Add("Faculty of Technical Education - Electrical Training");
            DList.Add("Faculty of Technical Education - Mechanical Education");
            DList.Add("Faculty of Technical Education - Metal Education");
            DList.Add("Faculty of Technical Education - Construction Education");

            DList.Add("Faculty of Faculty of Medicine - Medicine");

            DList.Sort();

            foreach (string department in DList)
            {
                selectlist.Add(new SelectListItem
                {
                    Text = department,
                    Value = department
                });
            }

            return selectlist;
            }
        }

    }
}