@model IEnumerable<StudentApplicationSystem.Models.Application>

@{
    ViewBag.Title = "Index";
}


@Styles.Render("~/Content/filtergrid.css")
@Scripts.Render("~/Scripts/tablefilter_all_min.js")

<h2>Applications</h2>

<hr class="soft" />

<div class="container table-responsive">

    <table class="table table-striped" id="myTable">
        <thead>
            <tr>
                @if ((int)Session["isAdmin"] == 1)
                {
                    <th>
                        @Html.DisplayNameFor(model => model.User.userId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.User.name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.User.email)
                    </th>
                }
                <th>
                    @Html.DisplayNameFor(model => model.cv)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.paperId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.dt_created)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Job.jobName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Job.applicationFinish)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Reviews.First().interviewDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Reviews.First().review1)
                </th>
                <th></th>
            </tr>
        </thead>

        <tbody id="tableData">

            @foreach (var item in Model)
            {
                <tr>
                    @if ((int)Session["isAdmin"] == 1)
                    {
                        <td>
                            @Html.DisplayFor(modelItem => item.User.userId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.User.printName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.User.email)
                        </td>
                    }

                    <td>
                        <form target="_blank" action=@Url.Action("Download", "Applications", new { id = item.applicationId })>
                            <button class="btn btn-primary" target="_blank" onclick="location.href='@Url.Action("Download", "Applications", new { id = item.applicationId })'">
                                <span class="glyphicon glyphicon-download-alt"></span> Download
                            </button>
                        </form>


                    </td>
                    <td>
                        @if (item.paperId != null)
                        {
                            <a href=@Url.Action("Edit", "InterviewQuestionPapers", new { id = item.paperId })><i class="glyphicon glyphicon-zoom-in"> Go to Interview </i></a>
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => item.paperId)
                        }

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.dt_created)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Job.jobName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Job.applicationFinish)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.status)
                    </td>
                    <td>
                        @if (item.Reviews.Count() > 0)
                        {
                            @Html.DisplayFor(modelItem => item.Reviews.First().interviewDate)
                        }
                        else
                        {
                            @Html.Display("TBA")
                        }
                    </td>
                    <td>
                        @if (item.Reviews.Count() > 0)
                        {
                            @Html.DisplayFor(modelItem => item.Reviews.First().review1)
                        }
                        else
                        {
                            @Html.Display("TBA")
                        }

                    </td>
                    <td>
                        @if ((int)Session["isAdmin"] == 1 && item.status.Contains("Pending"))
                        {
                            <a href=@Url.Action("Review", "Applications", new { id = item.applicationId })><i class="glyphicon glyphicon-edit"> Review </i></a>
                        }
                        <a href=@Url.Action("Details", new { id = item.applicationId })><i class="glyphicon glyphicon-zoom-in"> Details </i></a>
                        @if ((int)Session["isAdmin"] == 1 && item.status.Contains("Pending"))
                        {
                            <a href=@Url.Action("Delete", new { id = item.applicationId })><i class="glyphicon glyphicon-remove"> Delete </i></a>
                        }
                        
                    </td>
                </tr>
            }
        </tbody>

    </table>
</div>

@if ((int)Session["isAdmin"] == 1)
{
    <script>
        var table2_Props = {
            paging: true,
            paging_length: 3,
            rows_counter: true,
            rows_counter_text: "Applications:",
            btn_reset: true,
            loader: true,
            loader_text: "Loading...",
            col_3: "none",
            col_4: "none",
            col_8: "select",
            col_10: "none",
            col_11: "none",
            display_all_text: " [ Show all ] ",
            sort_select: true
        };
        var tf2 = setFilterGrid("myTable", table2_Props);

        var table = document.getElementById("tableData");
        var rows = table.getElementsByTagName("tr");
        for (i = 0; i < rows.length; i++) {
            var td = rows[i].getElementsByTagName("td")[8];
            var context = (td.textContent || td.innerText);

            if (context.includes("Accepted")) {
                td.style.color = "green";
            } else if (context.includes("Pending")) {
                td.style.color = "orange";
            } else if (context.includes("Denied")) {
                td.style.color = "red";
            }
        }
    </script>
}
else
{
    <script>
        var table2_Props = {
            paging: true,
            paging_length: 3,
            rows_counter: true,
            rows_counter_text: "Applications:",
            btn_reset: true,
            loader: true,
            loader_text: "Loading...",
            col_0: "none",
            col_1: "none",
            col_5: "select",
            col_8: "none",
            display_all_text: " [ Show all ] ",
            sort_select: true
        };
        var tf2 = setFilterGrid("myTable", table2_Props);

        var table = document.getElementById("tableData");
        var rows = table.getElementsByTagName("tr");
        for (i = 0; i < rows.length; i++) {
            var td = rows[i].getElementsByTagName("td")[5];
            var context = (td.textContent || td.innerText);
            if (context.includes("Accepted")) {
                td.style.color = "green";
            } else if (context.includes("Pending")) {
                td.style.color = "orange";
            } else if (context.includes("Denied")) {
                td.style.color = "red";
            }
        }
    </script>
}
