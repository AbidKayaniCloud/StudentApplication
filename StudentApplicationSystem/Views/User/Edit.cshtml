@model StudentApplicationSystem.Models.User

@{
    ViewBag.Title = "Edit";
}


<h2>Edit User</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr class="soft"/>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.userId)
        @Html.HiddenFor(model => model.password)
        @Html.HiddenFor(model => model.dt_created)

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.department, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.department, StudentApplicationSystem.Models.User.DepartmentList, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gpa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.gpa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.gpa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.phone_number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.phone_number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.phone_number, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Session["userName"] != null && (int)Session["isAdmin"] == 1)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.isAdmin, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.CheckBoxFor(model => model.BoolValue, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BoolValue, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <p>
                    <button class="btn btn-success" type="submit">
                        <span class="glyphicon glyphicon-floppy-saved"></span> Save
                    </button>
                </p>
            </div>
        </div>
    </div>
}

    <div>
        @if (Session["userName"] != null && (int)Session["isAdmin"] == 1)
        {
            <button class="btn btn-link" onclick="location.href='@Url.Action("Index", "User")';return false;">
                <span class="glyphicon glyphicon-arrow-left"></span> Back To List
            </button>
        }
        else if(Session["userName"] != null)
        {
            <button class="btn btn-link" onclick="location.href='@Url.Action("Details", new { id = Model.userId })';return false;">
                <span class="glyphicon glyphicon-arrow-left"></span> Back To Details
            </button>
        }

    </div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/jquery.mask.js")
    @Scripts.Render("~/Scripts/jquery.phonemask.js")
}
